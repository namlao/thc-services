<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thc.customerservice.Mapper.CustomerMapper">
    <resultMap id="CustomerResultMap" type="Customer">
        <id column="ID" property="id"/>
        <result column="NAME" property="name"/>
        <result column="PHONE" property="phone"/>
        <result column="POINT" property="point"/>
        <result property="level" column="LEVEL"/>
    </resultMap>

    <select id="findAll" resultMap="CustomerResultMap" parameterType="ListAllCustomerArgs">
        SELECT *
        FROM customer
        <where>
            <if test="id != null" >
                id = #{id}
            </if>
            <if test="name != null">
               and name like #{name}
            </if>
            <if test="phone != null">
                and phone =  #{phone}
            </if>
        </where>
    </select>

    <select id="findById" resultMap="CustomerResultMap" parameterType="String">
        SELECT *
        FROM customer
        WHERE id = #{id}
    </select>

    <select id="findByPhone" resultMap="CustomerResultMap" parameterType="String">
        SELECT *
        FROM customer
        WHERE PHONE = #{phone}
    </select>

    <insert id="addCustomer" parameterType="Customer">
        INSERT INTO customer(id, name, phone, point, level)
        VALUES (#{id}, #{name}, #{phone}, #{point}, #{level})
    </insert>

    <select id="count" resultType="Long">
        SELECT count(*)
        FROM customer
    </select>

    <update id="updateCustomer" parameterType="Customer">
        Update Customer
        set name=#{name},
            phone=#{phone},
            point=#{point},
            level=#{level}
        where id = #{id}
    </update>
    <delete id="deleteById" parameterType="String">
        DELETE
        FROM Customer
        WHERE id = #{id}
    </delete>
    <delete id="deleteAll">
        DELETE
        FROM Customer
    </delete>
</mapper>
